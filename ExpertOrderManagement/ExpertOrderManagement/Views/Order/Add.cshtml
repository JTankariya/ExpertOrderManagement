@model BusinessLogic.Order
@{
    ViewBag.Title = "Add";
    Layout = "~/Views/Shared/_Dashboard.cshtml";
    if (Model.ClientCompanyId == 0)
    {
        Model.Ord_Dt = DateTime.Now;
    }
}
@Styles.Render("~/Content/css/customsweetcss")


<div class="row">
    <div class="col-lg-offset-1 col-lg-10">
        <div class="card-box">
            <h4 class="m-t-0 header-title"><b>Order Details</b></h4>
            <p class="text-muted font-13 m-b-30">
                Add/Edit Orders here
            </p>
            @using (Html.BeginForm("Add", "Order", FormMethod.Post, new { @class = "form-horizontal m-t-20", @id = "frmOrder" }))
            {
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="hori-pass1" class="col-sm-4 control-label">Order No</label>
                            <div class="col-sm-7">
                                @Html.HiddenFor(x => x.ClientCompanyId)
                                @Html.HiddenFor(x => x.RefId)
                                @Html.HiddenFor(x => x.OperationFlag)
                                @Html.TextBoxFor(x => x.Ord_no, new { @class = "form-control", @placeholder = "Order No" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="hori-pass1" class="col-sm-4 control-label">Date</label>
                            <div class="col-sm-7">
                                @Html.TextBoxFor(x => x.Ord_Dt, "{0:dd/MM/yyyy}", new { @class = "datepicker form-control", @data_mask = "__/__/____", @placeholder = "Order Date" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <label for="inputEmail3" class="col-sm-4 control-label">Party</label>
                    <div class="col-sm-7">
                        @if (ViewBag.Parties != null)
                        {
                            @Html.DropDownListFor(x => x.Code, new SelectList(ViewBag.Parties, "Code", "Name"), "-- Select Party --", new { @class = "form-control" })
                        }
                        else
                        {
                            @Html.DropDownListFor(x => x.Code, new List<SelectListItem>(), new { @class = "form-control" })
                        }
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12">
                        <table id="tblOrderDetails" class="table table-striped table-bordered">
                            <thead>
                                <tr>
                                    <td>
                                        Delete?
                                    </td>
                                    <td>
                                        Product
                                    </td>
                                    <td>
                                        Batch No
                                    </td>
                                    <td>
                                        Qty
                                    </td>
                                    <td>
                                        Unit
                                    </td>
                                    <td>
                                        Rate
                                    </td>
                                    <td>
                                        Total
                                    </td>
                                    <td>
                                        Dly
                                    </td>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.ClientCompanyId == 0)
                                {
                                    <tr>
                                        <td>
                                            <button data-deldetail type="button" class="btn btn-sm btn-danger waves-effect waves-light m-l-5">
                                                <i class="ti-trash"></i>
                                            </button>
                                        </td>
                                        <td class="col-md-4">
                                            <input type="hidden" data-refid />
                                            <input type="hidden" data-operationflag />
                                            @if (ViewBag.Products != null)
                                            {
                                                @Html.DropDownList("ddlProduct", new SelectList(ViewBag.Products, "Code", "Name"), "-- Select Product --", new { @class = "form-control" })
                                            }
                                            else
                                            {
                                                @Html.DropDownList("ddlProduct", new List<SelectListItem>(), new { @class = "form-control" })
                                            }
                                        </td>
                                        <td class="col-md-2">
                                            <input type="text" class="numeric form-control" />
                                        </td>
                                        <td class="col-md-1">
                                            <input type="text" class="numeric form-control" />
                                        </td>
                                        <td class="col-md-1">
                                            <input type="text" class="form-control" disabled />
                                        </td>
                                        <td class="col-md-1">
                                            <input type="text" class="numeric form-control" />
                                        </td>
                                        <td class="col-md-2">
                                            <input type="text" class="numeric form-control" disabled />
                                        </td>
                                        <td class="col-md-1">
                                            <input type="text" class="numeric form-control" />
                                        </td>
                                    </tr>
                                }
                                else
                                {
                                    foreach (var detail in Model.Details)
                                    {
                                        <tr data-recordid="@detail.RefId">
                                            <td>
                                                <button data-deldetail type="button" class="btn btn-sm btn-danger waves-effect waves-light m-l-5">
                                                    <i class="ti-trash"></i>&nbsp;&nbsp;Delete
                                                </button>
                                            </td>
                                            <td class="col-md-2">
                                                <input type="hidden" data-refid value="@detail.RefId"/>
                                                <input type="hidden" data-operationflag value="@detail.OperationFlag" />
                                                @if (ViewBag.Products != null)
                                                {
                                                    @Html.DropDownList("ddlProduct", new SelectList(ViewBag.Products, "Code", "Name", detail.Code), "-- Select Product --", new { @class = "form-control" })
                                                }
                                                else
                                                {
                                                    @Html.DropDownList("ddlProduct", new List<SelectListItem>(), new { @class = "form-control" })
                                                }
                                            </td>
                                            <td class="col-md-2">
                                                <input type="text" value="@detail.BatchNo" class="numeric form-control" />
                                            </td>
                                            <td class="col-md-2">
                                                <input type="text" value="@detail.Qty" class="numeric form-control" style="max-width:70px;" />
                                            </td>
                                            <td class="col-md-2">
                                                <input type="text" value="@detail.Unit" class="form-control" disabled style="max-width:70px;" />
                                            </td>
                                            <td class="col-md-2">
                                                <input type="text" value="@detail.Rate" class="numeric form-control" style="max-width:70px;" />
                                            </td>
                                            <td class="col-md-2">
                                                <input type="text" value="@detail.Value" class="numeric form-control" disabled />
                                            </td>
                                            <td class="col-md-2">
                                                <input type="text" class="numeric form-control" />
                                            </td>
                                            <td class="col-md-2">
                                                <input type="text" value="@detail.Value" class="numeric form-control" />
                                            </td>
                                        </tr>
                                    }
                                    <tr>
                                        <td>
                                            <button data-deldetail type="button" class="btn btn-sm btn-danger waves-effect waves-light m-l-5">
                                                <i class="ti-trash"></i>&nbsp;&nbsp;Delete
                                            </button>
                                        </td>
                                        <td class="col-md-2">
                                            <input type="hidden" data-refid />
                                            <input type="hidden" data-operationflag />
                                            @if (ViewBag.Products != null)
                                            {
                                                @Html.DropDownList("ddlProduct", new SelectList(ViewBag.Products, "Code", "Name"), "-- Select Product --", new { @class = "form-control" })
                                            }
                                            else
                                            {
                                                @Html.DropDownList("ddlProduct", new List<SelectListItem>(), new { @class = "form-control" })
                                            }
                                        </td>
                                        <td class="col-md-2">
                                            <input type="text" class="numeric form-control" />
                                        </td>
                                        <td class="col-md-2">
                                            <input type="text" class="numeric form-control" />
                                        </td>
                                        <td class="col-md-2">
                                            <input type="text" class="form-control" disabled />
                                        </td>
                                        <td class="col-md-2">
                                            <input type="text" class="numeric form-control" />
                                        </td>
                                        <td class="col-md-2">
                                            <input type="text" class="numeric form-control" disabled />
                                        </td>
                                        <td class="col-md-2">
                                            <input type="text" class="numeric form-control" />
                                        </td>
                                    </tr>
                                }
                            </tbody>
                            <tfoot>
                                <tr>
                                    <td colspan="2">
                                        Total
                                    </td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="hori-pass1" class="col-sm-4 control-label">Payment Instruction</label>
                            <div class="col-sm-7">
                                @Html.TextAreaFor(x => x.Pay_Terms, new { @class = "form-control", @placeholder = "Payment Instruction", @rows = "2" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label for="hori-pass1" class="col-sm-4 control-label">Reference</label>
                                    <div class="col-sm-7">
                                        @Html.TextBoxFor(x => x.Reference, new { @class = "form-control", @placeholder = "Reference", @rows = "2" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label for="hori-pass1" class="col-sm-4 control-label">Grade</label>
                                    <div class="col-sm-7">
                                        @Html.TextBoxFor(x => x.Zone, new { @class = "form-control", @placeholder = "Grade", @rows = "2" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="hori-pass1" class="col-sm-4 control-label">Delivery Instruction</label>
                            <div class="col-sm-7">
                                @Html.TextAreaFor(x => x.Del_Ins, new { @class = "form-control", @placeholder = "Delivery Instruction", @rows = "2" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label for="hori-pass1" class="col-sm-4 control-label">Order Value</label>
                                    <div class="col-sm-7">
                                        @Html.TextBoxFor(x => x.Ord_value, new { @class = "numeric form-control", @placeholder = "Order Value", @rows = "2" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label for="hori-pass1" class="col-sm-4 control-label">Agent</label>
                                    <div class="col-sm-7">
                                        @Html.TextBoxFor(x => x.Agent, new { @class = "form-control", @placeholder = "Agent", @rows = "2" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="hori-pass1" class="col-sm-4 control-label">Billing Instruction</label>
                            <div class="col-sm-7">
                                @Html.TextAreaFor(x => x.Bill_Ins, new { @class = "form-control", @placeholder = "Billing Instructions", @rows = "2" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="hori-pass1" class="col-sm-4 control-label">Remarks</label>
                            <div class="col-sm-7">
                                @Html.TextAreaFor(x => x.Remarks, new { @class = "form-control", @placeholder = "Remarks", @rows = "2" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-offset-4 col-sm-8">
                        @*<a href="@Url.Action("Add", "Order", new { Id = 0 })" i id="btnAdd" type="button" class="btn btn-lg btn-default waves-effect waves-light m-l-5">
                            <i class="ti-plus"></i>&nbsp;&nbsp;Add
                        </a>*@
                        <button id="btnSave" type="submit" class="btn btn-lg btn-primary waves-effect waves-light">
                            <i class="ti-save"></i>&nbsp;&nbsp; Save
                        </button>
                        @*<button id="btnDelete" type="button" class="btn btn-lg btn-danger waves-effect waves-light m-l-5">
                            <i class="ti-trash"></i>&nbsp;&nbsp;Delete
                        </button>
                        <button id="btnView" type="button" class="btn btn-lg btn-warning waves-effect waves-light m-l-5">
                            <i class="ti-search"></i>&nbsp;&nbsp;View
                        </button>*@
                    </div>
                </div>

            }
        </div>
    </div>
</div>

<div id="custom-modal" class="modal-demo">
    <button type="button" class="close" onclick="Custombox.close();">
        <span>&times;</span><span class="sr-only">Close</span>
    </button>
    <h4 class="custom-modal-title">Orders</h4>
    <div class="custom-modal-text" id="AllInward" style="max-height:500px;overflow:auto;">

    </div>
</div>
@Scripts.Render("~/Content/css/customsweetjs")
<script src="@Url.Content("~/Content/plugins/bootstrap-datepicker/dist/js/bootstrap-datepicker.min.js")"></script>
<script src="@Url.Content("~/Content/plugins/bootstrap-inputmask/bootstrap-inputmask.min.js")" type="text/javascript"></script>
<script>
    function OrderAdded(response) {
        swal({
            title: "Information",
            text: "Order is saved successfully.",
            type: "success"
        }, function () {
            $('#btnAdd')[0].click();
        });
    }
    $(document).ready(function () {
        blankOrderDetailRow = $('#tblOrderDetails>tbody>tr:last')[0].outerHTML;
        $('body').on('click', '[data-deldetail]', function () {
            if ($(this).parent().parent().index() != $('#tblOrderDetails>tbody>tr:last').index()) {
                currDetailRow = $(this).parent().parent();
                swal({
                    title: "Are you sure want to delete this Transaction?",
                    text: "You will not be able to recover this Transaction!",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: "Yes, delete it!",
                    cancelButtonText: "No, cancel plz!",
                    closeOnConfirm: false,
                    closeOnCancel: false
                }, function (isConfirm) {
                    if (isConfirm) {
                        currDetailRow.hide();
                        CalculateTotal();
                        swal("Success", "Detail is Deleted :)", "success");
                    } else {
                        swal("Cancelled", "Order Detail is safe :)", "error");
                    }
                });
            }
        });
        $('body').on('change', '#tblOrderDetails tr td:nth-child(6) input,#tblOrderDetails tr td:nth-child(4) input', function () {
            CalculateTotal();
        });
        var currDDL = "";
        $('body').on('change', '#tblOrderDetails tr td:nth-child(2) select', function () {
            if (CheckDuplicate() == true) {
                return false;
            }
            if ($('#tblOrderDetails>tbody>tr:last').index() == $(this).parent().parent().index() && $(this).val().length > 0) {
                $('#tblOrderDetails>tbody').append(blankOrderDetailRow);
            }
            if ($(this).val().length > 0) {
                currDDL = this;
                $.ajax({
                    type: "GET",
                    url: '@Url.Action("GetDetail","Product")',
                    data: { Code: $(this).val() },
                    success: function (data) {
                        if (data.IsSuccess) {
                            $(currDDL).parent().siblings('td:eq(3)').find('input').val(data.ResponseValue.Unit1);
                            $(currDDL).parent().siblings('td:eq(4)').find('input').val(data.ResponseValue.Sl_Rate);
                            CalculateTotal();
                        }
                    }
                });
            }
            else {
                $(this).parent().siblings('td:eq(4) input').val("");
                $(this).parent().siblings('td:eq(5) input').val("");
                CalculateTotal();
            }
        });
        $('#frmOrder').validate({
            rules: {
                Ord_no: {
                    required: true
                    @*remote: {
                        url: '@Url.Action("CheckDuplicateNo", "Inward")',
                        data: { ID: $('#ID').val() },
                        type: "POST"
                    }*@
                },
                Ord_Date: {
                    required: true
                },
                Code: {
                    required: true
                }
            },
            messages: {
                Ord_no: {
                    required: "Please enter Order Number",
                    remote: "Order No is already entered, Please enter another Order No."
                },
                Ord_Date: {
                    required: "Please select Date"
                },
                Code: {
                    required: "Please select party"
                }
            },

            submitHandler: function (form) {
                if (grandTotal <= 0) {
                    swal({
                        title: "Information",
                        text: "Please enter Order details.",
                        type: "error"
                    }, function () {
                    });
                    return false;
                }
                var order = {};
                order.RefId = $('#RefId').val();
                order.ClientCompanyId = $('#ClientCompanyId').val();
                order.OperationFlag = $('#OperationFlag').val();
                order.Ord_no = $('#Ord_no').val();
                order.Ord_Dt = new Date($('#Ord_Dt').datepicker("getDate")).toISOString();
                order.Code = $('#Code').val();
                order.Pay_Terms = $('#Pay_Terms').val();
                order.Del_Ins = $('#Del_Ins').val();
                order.Bill_Ins = $('#Bill_Ins').val();
                order.Reference = $('#Reference').val();
                order.Zone = $('#Zone').val();
                order.Ord_value = $('#Ord_value').val();
                order.Agent = $('#Agent').val();
                order.Remarks = $('#Remarks').val();
                order.Details = [];
                $.each($('#tblOrderDetails>tbody>tr:not(:last-child)'), function (index, element) {
                    var detail = {};
                    detail.RefId = $(this).find('>td:eq(1) [data-refid]').val();
                    detail.OperationFlag = $(this).find('>td:eq(1) [data-operationflag]').val();
                    detail.Code = $(this).find('>td:eq(1) select').val();
                    detail.BatchNo = $(this).find('>td:eq(2) input').val();
                    detail.Qty = $(this).find('>td:eq(3) input').val();
                    detail.Unit = $(this).find('>td:eq(4) input').val();
                    detail.Rate = $(this).find('>td:eq(5) input').val();
                    detail.Value = $(this).find('>td:eq(6) input').val();                    
                    detail.IsDeleted = !$(this).is(':visible');
                    order.Details.push(detail);
                });

                $.ajax({
                    url: "@Url.Action("Save","Order")",
                    type: "POST",
                    data: JSON.stringify(order),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        if (response.IsSuccess) {
                            OrderAdded();
                        }
                        else {
                            swal("OOpsss", "There is some problem while saving data, Please try after sometime.", "error");
                        }
                    }
                });

                return false;
            }
        });


        $('.datepicker').datepicker({
            autoclose: true,
            format: 'dd/mm/yyyy',
            forceParse: false
        });
        CalculateTotal();
        $('#btnView').click(function () {
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetAll", "Order")",
                success: function (response) {
                    $('#AllOrder').html(response);
                    Custombox.open({
                        animation: 'rotatedown',
                        plugin: 'custommodal',
                        overlayspeed: '100',
                        overlaycolor: '#36404a',
                        target: '#custom-modal'
                    });
                    $('body').on('dblclick', '#tblOrder tbody tr', function () {
                        window.location.href = '@Url.Action("Add", "Order", new { Id = "REPLACE" })'.replace('REPLACE', $(this).data('empid'));
                    });
                }
            });

        });
        $('#btnDelete').click(function () {
            if ($('#ID').val() == "0") {
                swal("Please select any record First!", "In order to delete Inward, You need to select an Inward first.")
            }
            else {
                if ($('#tblPackings').find('input:disabled').length > 0) {
                    swal("Opppsss", "You can not delete this record as some of this record items is already dispatched or moved to production.")
                }
                else {
                    swal({
                        title: "Are you sure want to delete this Order?",
                        text: "You will not be able to recover this record!",
                        type: "warning",
                        showCancelButton: true,
                        confirmButtonColor: "#DD6B55",
                        confirmButtonText: "Yes, delete it!",
                        cancelButtonText: "No, cancel plz!",
                        closeOnConfirm: false,
                        closeOnCancel: false
                    }, function (isConfirm) {
                        if (isConfirm) {
                            $.ajax({
                                type: "GET",
                                url: "@Url.Action("Delete", "Order")",
                                data: { ID: $('#ID').val() },
                                success: function (response) {
                                    if (response.IsSuccess == true) {
                                        swal({
                                            title: "Deleted!",
                                            text: "Order is deleted Successfully.",
                                            type: "success"
                                        }, function () {
                                            $('#btnAdd')[0].click();
                                        });
                                    }
                                    else {
                                        swal("Opssss!", "Something seems wrong while deleting Inward.", "error");
                                    }
                                }
                            });

                        } else {
                            swal("Cancelled", "Inward is safe :)", "error");
                        }
                    });
                }

            }
        });
    });

    var grandTotal = 0;
    var blankInwardDetailRow = "", currProductDDL = "";
    var currDetailRow = "";
    function CheckDuplicate(ctrl) {
        var products = $('#tblOrderDetails>tbody>tr td:nth-child(1) select').filter(function (index, element) { return $(element).val() == $(ctrl).val() });
        $.each(products, function (index, element) {
            if ($(element).parent().parent().find('>td:nth-child(1) select').filter(function (sindex, selement) { return $(selement).val() == $(currentShade).val() }).length > 0 &&
                $(element).parent().parent().index() != $(ctrl).parent().parent().index()) {
                $(ctrl).val("");
                return true;
            }
        });
        return false;
    }
    function CalculateTotal() {
        grandTotal = 0;
        var qtyTotal = 0;
        $.each($('#tblOrderDetails>tbody>tr:visible'), function (index, element) {
            qtyTotal = qtyTotal + GetNumericValue($(element).find('td:eq(3) input').val());
            $(element).find('td:eq(6) input').val(GetNumericValue($(element).find('td:eq(3) input').val()) * GetNumericValue($(element).find('td:eq(5) input').val()));
            grandTotal = grandTotal + GetNumericValue($(element).find('td:eq(6) input').val());
        });
        $('#tblOrderDetails tfoot tr td:eq(2)').text((isNaN(qtyTotal) ? 0 : qtyTotal));
        $('#tblOrderDetails tfoot tr td:eq(5)').text((isNaN(grandTotal) ? 0 : grandTotal));
        $('#Ord_value').val(grandTotal);
    }
</script>