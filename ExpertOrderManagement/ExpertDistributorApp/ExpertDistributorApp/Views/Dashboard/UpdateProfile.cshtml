@model BAL.User
@{
    ViewBag.Title = "UpdateProfile";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
}
<div class="row-fluid">
    <div class="col-md-6 col-md-offset-3">
        <div class="panel panel-primary">
            <div class="panel-heading">
                <h3 class="panel-title">Update Your Profile</h3>
            </div>

            <div class="panel-body">
                @using (Html.BeginForm("UpdateProfile", "Dashboard", FormMethod.Post, new { @id = "frmUpdateProfile", @class = "form-horizontal" }))
                {
                    <div class="form-group">
                        <label class="col-md-3 control-label">First Name :</label>
                        <div class="col-md-9">
                            @Html.HiddenFor(x => x.Id, new { @class = "form-control" })
                            @Html.TextBoxFor(x => x.FirstName, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-md-3 control-label">Last Name :</label>
                        <div class="col-md-9">
                            @Html.TextBoxFor(x => x.LastName, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-md-3 control-label">Email Id :</label>
                        <div class="col-md-9">
                            @Html.TextBoxFor(x => x.EmailId, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-md-3 control-label">Mobile :</label>
                        <div class="col-md-9">
                            @Html.TextBoxFor(x => x.MobileNo, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-md-3 control-label">User Name :</label>
                        <div class="col-md-9">
                            @Html.TextBoxFor(x => x.UserName, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12 text-center">
                            <button type="submit" id="btnSubmit" class="btn btn-primary face"><span class="glyphicon glyphicon-log-in"></span> &nbsp;&nbsp;Update Profile</button>
                        </div>

                    </div>
                    <div>
                        @Html.ValidationSummary()
                    </div>
                }
            </div>
        </div>
    </div>
</div>


<script>
    $(document).ready(function () {
        $('#frmUpdateProfile').bootstrapValidator({
            feedbackIcons: {
                valid: 'glyphicon glyphicon-ok',
                invalid: 'glyphicon glyphicon-remove',
                validating: 'glyphicon glyphicon-refresh'
            },
            fields: {
                UserName: {
                    verbose: false,
                    validators: {
                        notEmpty: {
                            message: 'Please enter User Name'
                        },
                        remote: {
                            url: '@Url.Action("CheckUserName","Account")',
                            data: { EmailId: $('#UserName').val(), ExcludeId: $('#Id').val() },
                            type: 'POST',
                            delay: 2000,
                            message: 'Username is already registered with this system, Please enter another Username.'
                        }
                    }
                },
                Mobile: {
                    validators: {
                        notEmpty: {
                            message: 'Please enter Mobile Number'
                        }
                    }
                },
                FirstName: {
                    validators: {
                        notEmpty: {
                            message: 'Please enter First Name'
                        }
                    }
                },
                LastName: {
                    validators: {
                        notEmpty: {
                            message: 'Please enter Last Name'
                        }
                    }
                },
                MobileNo: {
                    validators: {
                        notEmpty: {
                            message: 'Please enter MobileNo'
                        }
                    }
                },
                EmailId: {
                    verbose: false,
                    validators: {
                        notEmpty: {
                            message: 'Please enter Email Id'
                        },
                        emailAddress: {
                            message: 'Please enter proper Email Address'
                        },
                        remote: {
                            url: '@Url.Action("CheckEmailId","Account")',
                            data: { EmailId: $('#EmailId').val(), ExcludeId: $('#Id').val() },
                            type: 'POST',
                            delay: 2000,
                            message: 'EmailId is already registered with this system, Please enter another email.'
                        }
                    }
                }
            }
        });
    });
</script>